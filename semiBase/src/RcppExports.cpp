// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// mkUIndx
SEXP mkUIndx(SEXP n_r, SEXP m_r, SEXP nnIndx_r, SEXP uIndx_r, SEXP uIndxLU_r, SEXP uiIndx_r, SEXP nnIndxLU_r, SEXP searchType_r);
RcppExport SEXP _semiBase_mkUIndx(SEXP n_rSEXP, SEXP m_rSEXP, SEXP nnIndx_rSEXP, SEXP uIndx_rSEXP, SEXP uIndxLU_rSEXP, SEXP uiIndx_rSEXP, SEXP nnIndxLU_rSEXP, SEXP searchType_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type n_r(n_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type m_r(m_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nnIndx_r(nnIndx_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type uIndx_r(uIndx_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type uIndxLU_r(uIndxLU_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type uiIndx_r(uiIndx_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nnIndxLU_r(nnIndxLU_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type searchType_r(searchType_rSEXP);
    rcpp_result_gen = Rcpp::wrap(mkUIndx(n_r, m_r, nnIndx_r, uIndx_r, uIndxLU_r, uiIndx_r, nnIndxLU_r, searchType_r));
    return rcpp_result_gen;
END_RCPP
}
// mkNNIndx
SEXP mkNNIndx(SEXP n_r, SEXP m_r, SEXP coords_r, SEXP nnIndx_r, SEXP nnDist_r, SEXP nnIndxLU_r, SEXP nThreads_r);
RcppExport SEXP _semiBase_mkNNIndx(SEXP n_rSEXP, SEXP m_rSEXP, SEXP coords_rSEXP, SEXP nnIndx_rSEXP, SEXP nnDist_rSEXP, SEXP nnIndxLU_rSEXP, SEXP nThreads_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type n_r(n_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type m_r(m_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type coords_r(coords_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nnIndx_r(nnIndx_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nnDist_r(nnDist_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nnIndxLU_r(nnIndxLU_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nThreads_r(nThreads_rSEXP);
    rcpp_result_gen = Rcpp::wrap(mkNNIndx(n_r, m_r, coords_r, nnIndx_r, nnDist_r, nnIndxLU_r, nThreads_r));
    return rcpp_result_gen;
END_RCPP
}
// mkNNIndxCB
SEXP mkNNIndxCB(SEXP n_r, SEXP m_r, SEXP coords_r, SEXP nnIndx_r, SEXP nnDist_r, SEXP nnIndxLU_r, SEXP nThreads_r);
RcppExport SEXP _semiBase_mkNNIndxCB(SEXP n_rSEXP, SEXP m_rSEXP, SEXP coords_rSEXP, SEXP nnIndx_rSEXP, SEXP nnDist_rSEXP, SEXP nnIndxLU_rSEXP, SEXP nThreads_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type n_r(n_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type m_r(m_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type coords_r(coords_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nnIndx_r(nnIndx_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nnDist_r(nnDist_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nnIndxLU_r(nnIndxLU_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nThreads_r(nThreads_rSEXP);
    rcpp_result_gen = Rcpp::wrap(mkNNIndxCB(n_r, m_r, coords_r, nnIndx_r, nnDist_r, nnIndxLU_r, nThreads_r));
    return rcpp_result_gen;
END_RCPP
}
// RdistC
SEXP RdistC(SEXP coords_r, SEXP larCoords_r, SEXP n_r, SEXP m_r, SEXP covModel_r, SEXP phi_r, SEXP nu_r, SEXP nuUnifb_r, SEXP nThreads_r);
RcppExport SEXP _semiBase_RdistC(SEXP coords_rSEXP, SEXP larCoords_rSEXP, SEXP n_rSEXP, SEXP m_rSEXP, SEXP covModel_rSEXP, SEXP phi_rSEXP, SEXP nu_rSEXP, SEXP nuUnifb_rSEXP, SEXP nThreads_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type coords_r(coords_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type larCoords_r(larCoords_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n_r(n_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type m_r(m_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type covModel_r(covModel_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type phi_r(phi_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nu_r(nu_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nuUnifb_r(nuUnifb_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nThreads_r(nThreads_rSEXP);
    rcpp_result_gen = Rcpp::wrap(RdistC(coords_r, larCoords_r, n_r, m_r, covModel_r, phi_r, nu_r, nuUnifb_r, nThreads_r));
    return rcpp_result_gen;
END_RCPP
}
// ConExp
SEXP ConExp(SEXP X_r, SEXP covZ_r, SEXP coords_r, SEXP Q_r, SEXP n_r, SEXP p_r, SEXP Kernel_r, SEXP h_r, SEXP GeomVariable_r, SEXP nThreads_r);
RcppExport SEXP _semiBase_ConExp(SEXP X_rSEXP, SEXP covZ_rSEXP, SEXP coords_rSEXP, SEXP Q_rSEXP, SEXP n_rSEXP, SEXP p_rSEXP, SEXP Kernel_rSEXP, SEXP h_rSEXP, SEXP GeomVariable_rSEXP, SEXP nThreads_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type X_r(X_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type covZ_r(covZ_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type coords_r(coords_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Q_r(Q_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n_r(n_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type p_r(p_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Kernel_r(Kernel_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type h_r(h_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type GeomVariable_r(GeomVariable_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nThreads_r(nThreads_rSEXP);
    rcpp_result_gen = Rcpp::wrap(ConExp(X_r, covZ_r, coords_r, Q_r, n_r, p_r, Kernel_r, h_r, GeomVariable_r, nThreads_r));
    return rcpp_result_gen;
END_RCPP
}
// local_kernel_est
SEXP local_kernel_est(SEXP y_r, SEXP covZ_r, SEXP n_r, SEXP covModel_r, SEXP h_r, SEXP nu_r, SEXP nuUnifb_r, SEXP nThreads_r);
RcppExport SEXP _semiBase_local_kernel_est(SEXP y_rSEXP, SEXP covZ_rSEXP, SEXP n_rSEXP, SEXP covModel_rSEXP, SEXP h_rSEXP, SEXP nu_rSEXP, SEXP nuUnifb_rSEXP, SEXP nThreads_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type y_r(y_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type covZ_r(covZ_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n_r(n_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type covModel_r(covModel_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type h_r(h_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nu_r(nu_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nuUnifb_r(nuUnifb_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nThreads_r(nThreads_rSEXP);
    rcpp_result_gen = Rcpp::wrap(local_kernel_est(y_r, covZ_r, n_r, covModel_r, h_r, nu_r, nuUnifb_r, nThreads_r));
    return rcpp_result_gen;
END_RCPP
}
// local_kernel_pred
SEXP local_kernel_pred(SEXP y_r, SEXP covZ_r, SEXP TestCovZ_r, SEXP n_r, SEXP nTest_r, SEXP covModel_r, SEXP h_r, SEXP nu_r, SEXP nuUnifb_r, SEXP nThreads_r);
RcppExport SEXP _semiBase_local_kernel_pred(SEXP y_rSEXP, SEXP covZ_rSEXP, SEXP TestCovZ_rSEXP, SEXP n_rSEXP, SEXP nTest_rSEXP, SEXP covModel_rSEXP, SEXP h_rSEXP, SEXP nu_rSEXP, SEXP nuUnifb_rSEXP, SEXP nThreads_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type y_r(y_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type covZ_r(covZ_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type TestCovZ_r(TestCovZ_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n_r(n_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nTest_r(nTest_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type covModel_r(covModel_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type h_r(h_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nu_r(nu_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nuUnifb_r(nuUnifb_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nThreads_r(nThreads_rSEXP);
    rcpp_result_gen = Rcpp::wrap(local_kernel_pred(y_r, covZ_r, TestCovZ_r, n_r, nTest_r, covModel_r, h_r, nu_r, nuUnifb_r, nThreads_r));
    return rcpp_result_gen;
END_RCPP
}
// spatial_LLE
SEXP spatial_LLE(SEXP y_r, SEXP X_r, SEXP coord_r, SEXP Q_r, SEXP fsDensity_r, SEXP n_r, SEXP p_r, SEXP covModel_r, SEXP h_r, SEXP nu_r, SEXP nuUnifb_r, SEXP adWidth_r, SEXP mm_r, SEXP nThreads_r);
RcppExport SEXP _semiBase_spatial_LLE(SEXP y_rSEXP, SEXP X_rSEXP, SEXP coord_rSEXP, SEXP Q_rSEXP, SEXP fsDensity_rSEXP, SEXP n_rSEXP, SEXP p_rSEXP, SEXP covModel_rSEXP, SEXP h_rSEXP, SEXP nu_rSEXP, SEXP nuUnifb_rSEXP, SEXP adWidth_rSEXP, SEXP mm_rSEXP, SEXP nThreads_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type y_r(y_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type X_r(X_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type coord_r(coord_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Q_r(Q_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type fsDensity_r(fsDensity_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n_r(n_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type p_r(p_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type covModel_r(covModel_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type h_r(h_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nu_r(nu_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nuUnifb_r(nuUnifb_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type adWidth_r(adWidth_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type mm_r(mm_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nThreads_r(nThreads_rSEXP);
    rcpp_result_gen = Rcpp::wrap(spatial_LLE(y_r, X_r, coord_r, Q_r, fsDensity_r, n_r, p_r, covModel_r, h_r, nu_r, nuUnifb_r, adWidth_r, mm_r, nThreads_r));
    return rcpp_result_gen;
END_RCPP
}
// spatial_LLE_Pred
SEXP spatial_LLE_Pred(SEXP y_r, SEXP X_r, SEXP coord_r, SEXP Q_r, SEXP fsDensity_r, SEXP n_r, SEXP pred_coord_r, SEXP m_r, SEXP p_r, SEXP covModel_r, SEXP h_r, SEXP nu_r, SEXP nuUnifb_r, SEXP adWidth_r, SEXP mm_r, SEXP nThreads_r);
RcppExport SEXP _semiBase_spatial_LLE_Pred(SEXP y_rSEXP, SEXP X_rSEXP, SEXP coord_rSEXP, SEXP Q_rSEXP, SEXP fsDensity_rSEXP, SEXP n_rSEXP, SEXP pred_coord_rSEXP, SEXP m_rSEXP, SEXP p_rSEXP, SEXP covModel_rSEXP, SEXP h_rSEXP, SEXP nu_rSEXP, SEXP nuUnifb_rSEXP, SEXP adWidth_rSEXP, SEXP mm_rSEXP, SEXP nThreads_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type y_r(y_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type X_r(X_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type coord_r(coord_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Q_r(Q_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type fsDensity_r(fsDensity_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n_r(n_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type pred_coord_r(pred_coord_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type m_r(m_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type p_r(p_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type covModel_r(covModel_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type h_r(h_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nu_r(nu_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nuUnifb_r(nuUnifb_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type adWidth_r(adWidth_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type mm_r(mm_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nThreads_r(nThreads_rSEXP);
    rcpp_result_gen = Rcpp::wrap(spatial_LLE_Pred(y_r, X_r, coord_r, Q_r, fsDensity_r, n_r, pred_coord_r, m_r, p_r, covModel_r, h_r, nu_r, nuUnifb_r, adWidth_r, mm_r, nThreads_r));
    return rcpp_result_gen;
END_RCPP
}
// semiQLME
SEXP semiQLME(SEXP y_r, SEXP n_r, SEXP m_r, SEXP N_r, SEXP coords_r, SEXP covModel_r, SEXP nnIndx_r, SEXP nnIndxLU_r, SEXP sigmaSq_r, SEXP phi_r, SEXP nu_r, SEXP nThreads_r);
RcppExport SEXP _semiBase_semiQLME(SEXP y_rSEXP, SEXP n_rSEXP, SEXP m_rSEXP, SEXP N_rSEXP, SEXP coords_rSEXP, SEXP covModel_rSEXP, SEXP nnIndx_rSEXP, SEXP nnIndxLU_rSEXP, SEXP sigmaSq_rSEXP, SEXP phi_rSEXP, SEXP nu_rSEXP, SEXP nThreads_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type y_r(y_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n_r(n_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type m_r(m_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type N_r(N_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type coords_r(coords_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type covModel_r(covModel_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nnIndx_r(nnIndx_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nnIndxLU_r(nnIndxLU_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type sigmaSq_r(sigmaSq_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type phi_r(phi_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nu_r(nu_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nThreads_r(nThreads_rSEXP);
    rcpp_result_gen = Rcpp::wrap(semiQLME(y_r, n_r, m_r, N_r, coords_r, covModel_r, nnIndx_r, nnIndxLU_r, sigmaSq_r, phi_r, nu_r, nThreads_r));
    return rcpp_result_gen;
END_RCPP
}
// krigPred
SEXP krigPred(SEXP coords_r, SEXP n_r, SEXP m_r, SEXP newCoords_r, SEXP N_r, SEXP nnIndx_r, SEXP wSamples_r, SEXP covModel_r, SEXP sigmaSq_r, SEXP NewSigmaSq_r, SEXP phi_r, SEXP nu_r, SEXP nuUnifb_r, SEXP nThreads_r, SEXP verbose_r);
RcppExport SEXP _semiBase_krigPred(SEXP coords_rSEXP, SEXP n_rSEXP, SEXP m_rSEXP, SEXP newCoords_rSEXP, SEXP N_rSEXP, SEXP nnIndx_rSEXP, SEXP wSamples_rSEXP, SEXP covModel_rSEXP, SEXP sigmaSq_rSEXP, SEXP NewSigmaSq_rSEXP, SEXP phi_rSEXP, SEXP nu_rSEXP, SEXP nuUnifb_rSEXP, SEXP nThreads_rSEXP, SEXP verbose_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type coords_r(coords_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n_r(n_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type m_r(m_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type newCoords_r(newCoords_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type N_r(N_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nnIndx_r(nnIndx_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type wSamples_r(wSamples_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type covModel_r(covModel_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type sigmaSq_r(sigmaSq_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type NewSigmaSq_r(NewSigmaSq_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type phi_r(phi_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nu_r(nu_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nuUnifb_r(nuUnifb_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nThreads_r(nThreads_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type verbose_r(verbose_rSEXP);
    rcpp_result_gen = Rcpp::wrap(krigPred(coords_r, n_r, m_r, newCoords_r, N_r, nnIndx_r, wSamples_r, covModel_r, sigmaSq_r, NewSigmaSq_r, phi_r, nu_r, nuUnifb_r, nThreads_r, verbose_r));
    return rcpp_result_gen;
END_RCPP
}
// OputBF
SEXP OputBF(SEXP n_r, SEXP m_r, SEXP coords_r, SEXP covModel_r, SEXP nnIndx_r, SEXP nnIndxLU_r, SEXP sigmaSq_r, SEXP phi_r, SEXP nu_r, SEXP nuUnifb_r, SEXP nThreads_r);
RcppExport SEXP _semiBase_OputBF(SEXP n_rSEXP, SEXP m_rSEXP, SEXP coords_rSEXP, SEXP covModel_rSEXP, SEXP nnIndx_rSEXP, SEXP nnIndxLU_rSEXP, SEXP sigmaSq_rSEXP, SEXP phi_rSEXP, SEXP nu_rSEXP, SEXP nuUnifb_rSEXP, SEXP nThreads_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type n_r(n_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type m_r(m_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type coords_r(coords_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type covModel_r(covModel_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nnIndx_r(nnIndx_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nnIndxLU_r(nnIndxLU_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type sigmaSq_r(sigmaSq_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type phi_r(phi_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nu_r(nu_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nuUnifb_r(nuUnifb_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nThreads_r(nThreads_rSEXP);
    rcpp_result_gen = Rcpp::wrap(OputBF(n_r, m_r, coords_r, covModel_r, nnIndx_r, nnIndxLU_r, sigmaSq_r, phi_r, nu_r, nuUnifb_r, nThreads_r));
    return rcpp_result_gen;
END_RCPP
}
// bivariate_local_kernel_est
SEXP bivariate_local_kernel_est(SEXP y_r, SEXP covZ_r, SEXP lon_r, SEXP lat_r, SEXP n_r, SEXP Kernel_r, SEXP h_r, SEXP nThreads_r);
RcppExport SEXP _semiBase_bivariate_local_kernel_est(SEXP y_rSEXP, SEXP covZ_rSEXP, SEXP lon_rSEXP, SEXP lat_rSEXP, SEXP n_rSEXP, SEXP Kernel_rSEXP, SEXP h_rSEXP, SEXP nThreads_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type y_r(y_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type covZ_r(covZ_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type lon_r(lon_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type lat_r(lat_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n_r(n_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Kernel_r(Kernel_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type h_r(h_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nThreads_r(nThreads_rSEXP);
    rcpp_result_gen = Rcpp::wrap(bivariate_local_kernel_est(y_r, covZ_r, lon_r, lat_r, n_r, Kernel_r, h_r, nThreads_r));
    return rcpp_result_gen;
END_RCPP
}
// SemiAlphaPro
SEXP SemiAlphaPro(SEXP y_r, SEXP Z_r, SEXP n_r, SEXP coords_r, SEXP Q_r, SEXP nnIndx_r, SEXP nnIndxLU_r, SEXP Kernel_r, SEXP h_r, SEXP GeomVariable_r, SEXP nThreads_r);
RcppExport SEXP _semiBase_SemiAlphaPro(SEXP y_rSEXP, SEXP Z_rSEXP, SEXP n_rSEXP, SEXP coords_rSEXP, SEXP Q_rSEXP, SEXP nnIndx_rSEXP, SEXP nnIndxLU_rSEXP, SEXP Kernel_rSEXP, SEXP h_rSEXP, SEXP GeomVariable_rSEXP, SEXP nThreads_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type y_r(y_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Z_r(Z_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n_r(n_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type coords_r(coords_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Q_r(Q_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nnIndx_r(nnIndx_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nnIndxLU_r(nnIndxLU_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Kernel_r(Kernel_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type h_r(h_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type GeomVariable_r(GeomVariable_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nThreads_r(nThreads_rSEXP);
    rcpp_result_gen = Rcpp::wrap(SemiAlphaPro(y_r, Z_r, n_r, coords_r, Q_r, nnIndx_r, nnIndxLU_r, Kernel_r, h_r, GeomVariable_r, nThreads_r));
    return rcpp_result_gen;
END_RCPP
}
// semiProPred
SEXP semiProPred(SEXP y_r, SEXP Z_r, SEXP TestZ_r, SEXP n_r, SEXP nTest_r, SEXP coords_r, SEXP TestCoords_r, SEXP Q_r, SEXP nnIndx_r, SEXP nnIndxLU_r, SEXP Kernel_r, SEXP h_r, SEXP GeomVariable_r, SEXP nThreads_r);
RcppExport SEXP _semiBase_semiProPred(SEXP y_rSEXP, SEXP Z_rSEXP, SEXP TestZ_rSEXP, SEXP n_rSEXP, SEXP nTest_rSEXP, SEXP coords_rSEXP, SEXP TestCoords_rSEXP, SEXP Q_rSEXP, SEXP nnIndx_rSEXP, SEXP nnIndxLU_rSEXP, SEXP Kernel_rSEXP, SEXP h_rSEXP, SEXP GeomVariable_rSEXP, SEXP nThreads_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type y_r(y_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Z_r(Z_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type TestZ_r(TestZ_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n_r(n_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nTest_r(nTest_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type coords_r(coords_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type TestCoords_r(TestCoords_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Q_r(Q_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nnIndx_r(nnIndx_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nnIndxLU_r(nnIndxLU_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Kernel_r(Kernel_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type h_r(h_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type GeomVariable_r(GeomVariable_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nThreads_r(nThreads_rSEXP);
    rcpp_result_gen = Rcpp::wrap(semiProPred(y_r, Z_r, TestZ_r, n_r, nTest_r, coords_r, TestCoords_r, Q_r, nnIndx_r, nnIndxLU_r, Kernel_r, h_r, GeomVariable_r, nThreads_r));
    return rcpp_result_gen;
END_RCPP
}
// SemiAlpha
SEXP SemiAlpha(SEXP y_r, SEXP Z_r, SEXP n_r, SEXP coords_r, SEXP B_r, SEXP F_r, SEXP Q_r, SEXP nnIndx_r, SEXP nnIndxLU_r, SEXP Kernel_r, SEXP h_r, SEXP GeomVariable_r, SEXP nThreads_r);
RcppExport SEXP _semiBase_SemiAlpha(SEXP y_rSEXP, SEXP Z_rSEXP, SEXP n_rSEXP, SEXP coords_rSEXP, SEXP B_rSEXP, SEXP F_rSEXP, SEXP Q_rSEXP, SEXP nnIndx_rSEXP, SEXP nnIndxLU_rSEXP, SEXP Kernel_rSEXP, SEXP h_rSEXP, SEXP GeomVariable_rSEXP, SEXP nThreads_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type y_r(y_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Z_r(Z_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n_r(n_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type coords_r(coords_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type B_r(B_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type F_r(F_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Q_r(Q_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nnIndx_r(nnIndx_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nnIndxLU_r(nnIndxLU_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Kernel_r(Kernel_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type h_r(h_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type GeomVariable_r(GeomVariable_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nThreads_r(nThreads_rSEXP);
    rcpp_result_gen = Rcpp::wrap(SemiAlpha(y_r, Z_r, n_r, coords_r, B_r, F_r, Q_r, nnIndx_r, nnIndxLU_r, Kernel_r, h_r, GeomVariable_r, nThreads_r));
    return rcpp_result_gen;
END_RCPP
}
// semiPred
SEXP semiPred(SEXP y_r, SEXP Z_r, SEXP TestZ_r, SEXP n_r, SEXP nTest_r, SEXP coords_r, SEXP TestCoords_r, SEXP B_r, SEXP F_r, SEXP Q_r, SEXP nnIndx_r, SEXP nnIndxLU_r, SEXP Kernel_r, SEXP h_r, SEXP GeomVariable_r, SEXP nThreads_r);
RcppExport SEXP _semiBase_semiPred(SEXP y_rSEXP, SEXP Z_rSEXP, SEXP TestZ_rSEXP, SEXP n_rSEXP, SEXP nTest_rSEXP, SEXP coords_rSEXP, SEXP TestCoords_rSEXP, SEXP B_rSEXP, SEXP F_rSEXP, SEXP Q_rSEXP, SEXP nnIndx_rSEXP, SEXP nnIndxLU_rSEXP, SEXP Kernel_rSEXP, SEXP h_rSEXP, SEXP GeomVariable_rSEXP, SEXP nThreads_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type y_r(y_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Z_r(Z_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type TestZ_r(TestZ_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n_r(n_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nTest_r(nTest_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type coords_r(coords_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type TestCoords_r(TestCoords_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type B_r(B_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type F_r(F_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Q_r(Q_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nnIndx_r(nnIndx_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nnIndxLU_r(nnIndxLU_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Kernel_r(Kernel_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type h_r(h_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type GeomVariable_r(GeomVariable_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nThreads_r(nThreads_rSEXP);
    rcpp_result_gen = Rcpp::wrap(semiPred(y_r, Z_r, TestZ_r, n_r, nTest_r, coords_r, TestCoords_r, B_r, F_r, Q_r, nnIndx_r, nnIndxLU_r, Kernel_r, h_r, GeomVariable_r, nThreads_r));
    return rcpp_result_gen;
END_RCPP
}
// theta_Wang_Cst
SEXP theta_Wang_Cst(SEXP y_r, SEXP Z_r, SEXP Time_r, SEXP Q_r, SEXP H_r, SEXP n_r, SEXP Nt_r, SEXP Pz_r, SEXP Kernel_r, SEXP h_r, SEXP nuUnifb_r, SEXP nu_r, SEXP nThreads_r);
RcppExport SEXP _semiBase_theta_Wang_Cst(SEXP y_rSEXP, SEXP Z_rSEXP, SEXP Time_rSEXP, SEXP Q_rSEXP, SEXP H_rSEXP, SEXP n_rSEXP, SEXP Nt_rSEXP, SEXP Pz_rSEXP, SEXP Kernel_rSEXP, SEXP h_rSEXP, SEXP nuUnifb_rSEXP, SEXP nu_rSEXP, SEXP nThreads_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type y_r(y_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Z_r(Z_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Time_r(Time_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Q_r(Q_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type H_r(H_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n_r(n_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Nt_r(Nt_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Pz_r(Pz_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Kernel_r(Kernel_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type h_r(h_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nuUnifb_r(nuUnifb_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nu_r(nu_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nThreads_r(nThreads_rSEXP);
    rcpp_result_gen = Rcpp::wrap(theta_Wang_Cst(y_r, Z_r, Time_r, Q_r, H_r, n_r, Nt_r, Pz_r, Kernel_r, h_r, nuUnifb_r, nu_r, nThreads_r));
    return rcpp_result_gen;
END_RCPP
}
// theta_Est_Ct
SEXP theta_Est_Ct(SEXP y_r, SEXP Z_r, SEXP Time_r, SEXP Q_r, SEXP n_r, SEXP Nt_r, SEXP Pz_r, SEXP Kernel_r, SEXP h_r, SEXP nuUnifb_r, SEXP nu_r, SEXP nThreads_r);
RcppExport SEXP _semiBase_theta_Est_Ct(SEXP y_rSEXP, SEXP Z_rSEXP, SEXP Time_rSEXP, SEXP Q_rSEXP, SEXP n_rSEXP, SEXP Nt_rSEXP, SEXP Pz_rSEXP, SEXP Kernel_rSEXP, SEXP h_rSEXP, SEXP nuUnifb_rSEXP, SEXP nu_rSEXP, SEXP nThreads_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type y_r(y_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Z_r(Z_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Time_r(Time_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Q_r(Q_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n_r(n_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Nt_r(Nt_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Pz_r(Pz_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Kernel_r(Kernel_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type h_r(h_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nuUnifb_r(nuUnifb_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nu_r(nu_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nThreads_r(nThreads_rSEXP);
    rcpp_result_gen = Rcpp::wrap(theta_Est_Ct(y_r, Z_r, Time_r, Q_r, n_r, Nt_r, Pz_r, Kernel_r, h_r, nuUnifb_r, nu_r, nThreads_r));
    return rcpp_result_gen;
END_RCPP
}
// ModCov
SEXP ModCov(SEXP C_r, SEXP Var_r, SEXP n_r);
RcppExport SEXP _semiBase_ModCov(SEXP C_rSEXP, SEXP Var_rSEXP, SEXP n_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type C_r(C_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Var_r(Var_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n_r(n_rSEXP);
    rcpp_result_gen = Rcpp::wrap(ModCov(C_r, Var_r, n_r));
    return rcpp_result_gen;
END_RCPP
}
// build_spCov_C
SEXP build_spCov_C(SEXP Coord_r, SEXP n_r, SEXP J_r, SEXP range_r, SEXP sigma_r, SEXP nu_r, SEXP nuUnifb_r, SEXP CovModel_r, SEXP nThreads_r);
RcppExport SEXP _semiBase_build_spCov_C(SEXP Coord_rSEXP, SEXP n_rSEXP, SEXP J_rSEXP, SEXP range_rSEXP, SEXP sigma_rSEXP, SEXP nu_rSEXP, SEXP nuUnifb_rSEXP, SEXP CovModel_rSEXP, SEXP nThreads_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Coord_r(Coord_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n_r(n_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type J_r(J_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type range_r(range_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type sigma_r(sigma_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nu_r(nu_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nuUnifb_r(nuUnifb_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type CovModel_r(CovModel_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nThreads_r(nThreads_rSEXP);
    rcpp_result_gen = Rcpp::wrap(build_spCov_C(Coord_r, n_r, J_r, range_r, sigma_r, nu_r, nuUnifb_r, CovModel_r, nThreads_r));
    return rcpp_result_gen;
END_RCPP
}
// semiCov_Cs
SEXP semiCov_Cs(SEXP y_r, SEXP Coord_r, SEXP n_r, SEXP m_r, SEXP N_r, SEXP Kernel_r, SEXP h_r, SEXP d_r, SEXP nuUnifb_r, SEXP nu_r, SEXP nThreads_r);
RcppExport SEXP _semiBase_semiCov_Cs(SEXP y_rSEXP, SEXP Coord_rSEXP, SEXP n_rSEXP, SEXP m_rSEXP, SEXP N_rSEXP, SEXP Kernel_rSEXP, SEXP h_rSEXP, SEXP d_rSEXP, SEXP nuUnifb_rSEXP, SEXP nu_rSEXP, SEXP nThreads_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type y_r(y_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Coord_r(Coord_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n_r(n_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type m_r(m_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type N_r(N_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Kernel_r(Kernel_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type h_r(h_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type d_r(d_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nuUnifb_r(nuUnifb_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nu_r(nu_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nThreads_r(nThreads_rSEXP);
    rcpp_result_gen = Rcpp::wrap(semiCov_Cs(y_r, Coord_r, n_r, m_r, N_r, Kernel_r, h_r, d_r, nuUnifb_r, nu_r, nThreads_r));
    return rcpp_result_gen;
END_RCPP
}
// semiCov_Ct
SEXP semiCov_Ct(SEXP y_r, SEXP Time_r, SEXP CvIndex_r, SEXP n_r, SEXP Nt_r, SEXP estNt_r, SEXP Cv_r, SEXP Kernel_r, SEXP h_r, SEXP nuUnifb_r, SEXP nu_r, SEXP nThreads_r);
RcppExport SEXP _semiBase_semiCov_Ct(SEXP y_rSEXP, SEXP Time_rSEXP, SEXP CvIndex_rSEXP, SEXP n_rSEXP, SEXP Nt_rSEXP, SEXP estNt_rSEXP, SEXP Cv_rSEXP, SEXP Kernel_rSEXP, SEXP h_rSEXP, SEXP nuUnifb_rSEXP, SEXP nu_rSEXP, SEXP nThreads_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type y_r(y_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Time_r(Time_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type CvIndex_r(CvIndex_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n_r(n_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Nt_r(Nt_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type estNt_r(estNt_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Cv_r(Cv_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Kernel_r(Kernel_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type h_r(h_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nuUnifb_r(nuUnifb_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nu_r(nu_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nThreads_r(nThreads_rSEXP);
    rcpp_result_gen = Rcpp::wrap(semiCov_Ct(y_r, Time_r, CvIndex_r, n_r, Nt_r, estNt_r, Cv_r, Kernel_r, h_r, nuUnifb_r, nu_r, nThreads_r));
    return rcpp_result_gen;
END_RCPP
}
// semiCov_Cst
SEXP semiCov_Cst(SEXP y_r, SEXP Time_r, SEXP Coord_r, SEXP CvIndex_r, SEXP n_r, SEXP Nt_r, SEXP Cv_r, SEXP Kernel_r, SEXP h_r, SEXP d_r, SEXP m_r, SEXP nuUnifb_r, SEXP nu_r, SEXP nThreads_r);
RcppExport SEXP _semiBase_semiCov_Cst(SEXP y_rSEXP, SEXP Time_rSEXP, SEXP Coord_rSEXP, SEXP CvIndex_rSEXP, SEXP n_rSEXP, SEXP Nt_rSEXP, SEXP Cv_rSEXP, SEXP Kernel_rSEXP, SEXP h_rSEXP, SEXP d_rSEXP, SEXP m_rSEXP, SEXP nuUnifb_rSEXP, SEXP nu_rSEXP, SEXP nThreads_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type y_r(y_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Time_r(Time_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Coord_r(Coord_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type CvIndex_r(CvIndex_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n_r(n_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Nt_r(Nt_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Cv_r(Cv_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Kernel_r(Kernel_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type h_r(h_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type d_r(d_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type m_r(m_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nuUnifb_r(nuUnifb_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nu_r(nu_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nThreads_r(nThreads_rSEXP);
    rcpp_result_gen = Rcpp::wrap(semiCov_Cst(y_r, Time_r, Coord_r, CvIndex_r, n_r, Nt_r, Cv_r, Kernel_r, h_r, d_r, m_r, nuUnifb_r, nu_r, nThreads_r));
    return rcpp_result_gen;
END_RCPP
}
// stSemiVary_C
SEXP stSemiVary_C(SEXP y_r, SEXP Z_r, SEXP Time_r, SEXP Q_r, SEXP n_r, SEXP Nt_r, SEXP Pz_r, SEXP Kernel_r, SEXP h_r, SEXP nuUnifb_r, SEXP nu_r, SEXP nThreads_r);
RcppExport SEXP _semiBase_stSemiVary_C(SEXP y_rSEXP, SEXP Z_rSEXP, SEXP Time_rSEXP, SEXP Q_rSEXP, SEXP n_rSEXP, SEXP Nt_rSEXP, SEXP Pz_rSEXP, SEXP Kernel_rSEXP, SEXP h_rSEXP, SEXP nuUnifb_rSEXP, SEXP nu_rSEXP, SEXP nThreads_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type y_r(y_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Z_r(Z_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Time_r(Time_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Q_r(Q_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type n_r(n_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Nt_r(Nt_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Pz_r(Pz_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Kernel_r(Kernel_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type h_r(h_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nuUnifb_r(nuUnifb_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nu_r(nu_rSEXP);
    Rcpp::traits::input_parameter< SEXP >::type nThreads_r(nThreads_rSEXP);
    rcpp_result_gen = Rcpp::wrap(stSemiVary_C(y_r, Z_r, Time_r, Q_r, n_r, Nt_r, Pz_r, Kernel_r, h_r, nuUnifb_r, nu_r, nThreads_r));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_semiBase_mkUIndx", (DL_FUNC) &_semiBase_mkUIndx, 8},
    {"_semiBase_mkNNIndx", (DL_FUNC) &_semiBase_mkNNIndx, 7},
    {"_semiBase_mkNNIndxCB", (DL_FUNC) &_semiBase_mkNNIndxCB, 7},
    {"_semiBase_RdistC", (DL_FUNC) &_semiBase_RdistC, 9},
    {"_semiBase_ConExp", (DL_FUNC) &_semiBase_ConExp, 10},
    {"_semiBase_local_kernel_est", (DL_FUNC) &_semiBase_local_kernel_est, 8},
    {"_semiBase_local_kernel_pred", (DL_FUNC) &_semiBase_local_kernel_pred, 10},
    {"_semiBase_spatial_LLE", (DL_FUNC) &_semiBase_spatial_LLE, 14},
    {"_semiBase_spatial_LLE_Pred", (DL_FUNC) &_semiBase_spatial_LLE_Pred, 16},
    {"_semiBase_semiQLME", (DL_FUNC) &_semiBase_semiQLME, 12},
    {"_semiBase_krigPred", (DL_FUNC) &_semiBase_krigPred, 15},
    {"_semiBase_OputBF", (DL_FUNC) &_semiBase_OputBF, 11},
    {"_semiBase_bivariate_local_kernel_est", (DL_FUNC) &_semiBase_bivariate_local_kernel_est, 8},
    {"_semiBase_SemiAlphaPro", (DL_FUNC) &_semiBase_SemiAlphaPro, 11},
    {"_semiBase_semiProPred", (DL_FUNC) &_semiBase_semiProPred, 14},
    {"_semiBase_SemiAlpha", (DL_FUNC) &_semiBase_SemiAlpha, 13},
    {"_semiBase_semiPred", (DL_FUNC) &_semiBase_semiPred, 16},
    {"_semiBase_theta_Wang_Cst", (DL_FUNC) &_semiBase_theta_Wang_Cst, 13},
    {"_semiBase_theta_Est_Ct", (DL_FUNC) &_semiBase_theta_Est_Ct, 12},
    {"_semiBase_ModCov", (DL_FUNC) &_semiBase_ModCov, 3},
    {"_semiBase_build_spCov_C", (DL_FUNC) &_semiBase_build_spCov_C, 9},
    {"_semiBase_semiCov_Cs", (DL_FUNC) &_semiBase_semiCov_Cs, 11},
    {"_semiBase_semiCov_Ct", (DL_FUNC) &_semiBase_semiCov_Ct, 12},
    {"_semiBase_semiCov_Cst", (DL_FUNC) &_semiBase_semiCov_Cst, 14},
    {"_semiBase_stSemiVary_C", (DL_FUNC) &_semiBase_stSemiVary_C, 12},
    {NULL, NULL, 0}
};

RcppExport void R_init_semiBase(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
